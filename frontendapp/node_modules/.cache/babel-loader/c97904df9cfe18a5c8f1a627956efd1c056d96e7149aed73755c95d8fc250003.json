{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/myproject/crelio-project-frontend/frontendapp/src/components/staffcomponents/Stafflogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Staffnavbar from \"./Staffnavbar\";\nimport '../styles/Forms.css';\nimport { useDispatch } from 'react-redux';\nimport { loginError, loginLoading, loginSuccess } from '../../redux/staff/Actions';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Stafflogin = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  //const[confirmpass,setConformpass]=useState(\"\");\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  let login = () => {\n    dispatch(loginLoading());\n    axios({\n      method: \"all\",\n      url: 'http://localhost:8000/staff/staff',\n      data: {\n        Email: email,\n        Password: password\n      }\n    }).then(response => {\n      sessionStorage.setItem(\"staff_token\", JSON.stringify(response.data));\n      console.log(response.data);\n      dispatch(loginSuccess(response.data));\n      alert(\"Login successful.\");\n      navigate('/staff/profile');\n    }).catch(error => {\n      dispatch(loginError());\n      let errmessage = \"Invalid credientials\";\n      alert(\"Error :\" + errmessage);\n    });\n  };\n  let handleLogin = () => {\n    //targetting elements to show alerts.\n    let targetemail = document.getElementById(\"email\");\n    let targetpass = document.getElementById(\"password\");\n    let targetconfirmpass = document.getElementById(\"confirm\");\n    let emailcheck = /\\S+@\\S+\\.\\S+/;\n    if (!email) {\n      targetemail.className = \"form-input-alert\";\n      targetemail.value = \"⚠ Please enter email\";\n    } else if (!emailcheck.test(email)) {\n      targetemail.className = \"form-input-alert\";\n      targetemail.value = \"⚠ Invalid email! Please enter a valid email\";\n    } else if (!password) {\n      targetpass.className = \"form-input-alert\";\n      targetpass.type = \"text\";\n      targetpass.value = \"⚠ Please enter password\";\n    } else {\n      login();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Staffnavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          color: \"rgb(4,4,170)\",\n          textAlign: \"center\",\n          fontSize: \"2.5vw\",\n          padding: '0px',\n          margin: '0px',\n          fontWeight: \"500\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-label\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        className: \"form-input\",\n        type: \"text\",\n        value: email,\n        onChange: event => {\n          setEmail(event.target.value);\n        },\n        onFocus: e => {\n          e.target.className = \"form-input\";\n          e.target.value = \"\";\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"form-label\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"password\",\n        className: \"form-input\",\n        type: \"password\",\n        value: password,\n        onChange: event => setPassword(event.target.value),\n        onFocus: e => {\n          e.target.className = \"form-input\";\n          e.target.value = \"\";\n          e.target.type = \"password\";\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form-button\",\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(Stafflogin, \"SOEJz1vbStjSeNEWhmUlKFJKo14=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Stafflogin;\nexport default Stafflogin;\nvar _c;\n$RefreshReg$(_c, \"Stafflogin\");","map":{"version":3,"names":["React","useState","Staffnavbar","useDispatch","loginError","loginLoading","loginSuccess","axios","useNavigate","Stafflogin","email","setEmail","password","setPassword","dispatch","navigate","login","method","url","data","Email","Password","then","response","sessionStorage","setItem","JSON","stringify","console","log","alert","catch","error","errmessage","handleLogin","targetemail","document","getElementById","targetpass","targetconfirmpass","emailcheck","className","value","test","type","color","textAlign","fontSize","padding","margin","fontWeight","event","target","e"],"sources":["/Users/apple/Desktop/myproject/crelio-project-frontend/frontendapp/src/components/staffcomponents/Stafflogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Staffnavbar from \"./Staffnavbar\";\nimport '../styles/Forms.css';\nimport { useDispatch } from 'react-redux';\nimport { loginError, loginLoading, loginSuccess } from '../../redux/staff/Actions';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst Stafflogin = () => {\n  \n  const[email,setEmail]=useState(\"\");\n  const[password,setPassword]=useState(\"\");\n  //const[confirmpass,setConformpass]=useState(\"\");\n  const dispatch=useDispatch();\n  const navigate = useNavigate();\n  let login=()=>{\n    dispatch(loginLoading())\n        axios({\n          method:\"all\",\n          url: 'http://localhost:8000/staff/staff',\n          data:{Email:email,\n          Password:password}\n      }).then((response)=>{\n        sessionStorage.setItem(\"staff_token\",JSON.stringify(response.data))\n        console.log(response.data)\n        dispatch(loginSuccess(response.data));\n        alert(\"Login successful.\");\n        navigate('/staff/profile');\n      }).catch((error)=>{\n        dispatch(loginError());\n        let errmessage=\"Invalid credientials\";\n        alert(\"Error :\"+errmessage);\n      })\n  }\n\n\n  let handleLogin=()=>{\n      //targetting elements to show alerts.\n  let targetemail=document.getElementById(\"email\");\n  let targetpass=document.getElementById(\"password\");\n  let targetconfirmpass=document.getElementById(\"confirm\"); \n\n    let emailcheck= /\\S+@\\S+\\.\\S+/;\n    if(!email){\n      targetemail.className=\"form-input-alert\";\n      targetemail.value=\"⚠ Please enter email\";\n    }\n    else if(!emailcheck.test(email)){\n      targetemail.className=\"form-input-alert\";  \n      targetemail.value=\"⚠ Invalid email! Please enter a valid email\";\n    }\n    else if(!password){\n      targetpass.className=\"form-input-alert\";\n      targetpass.type=\"text\";  \n      targetpass.value=\"⚠ Please enter password\";\n    }\n    else{\n    login();\n    }\n  }\n  return (\n    <>\n    <Staffnavbar/>\n    \n    <div className='form-wrapper'>\n    <h3 style={{color:\"rgb(4,4,170)\", textAlign:\"center\",fontSize:\"2.5vw\",padding:'0px',margin:'0px',fontWeight:\"500\"}}>Login</h3>\n    <p className='form-label'>Email</p>\n         \n         <input id=\"email\" className=\"form-input\" type='text' value={email} \n         onChange={(event=>{setEmail(event.target.value)})}\n         onFocus={(e=>{e.target.className=\"form-input\" \n         e.target.value=\"\"})}\n         />\n         <p className='form-label'>Password</p>\n         \n         <input id=\"password\" className=\"form-input\" type='password' value={password}\n          onChange={(event=>setPassword(event.target.value))}\n          onFocus={(e=>{e.target.className=\"form-input\"\n          e.target.value=\"\"\n          e.target.type=\"password\"})}\n          />\n         {/* <p className='form-label'>Confirm Password</p>\n         \n         <input id=\"confirm\" className=\"form-input\" type='password' value={confirmpass} \n         onChange={(event=>setConformpass(event.target.value))}\n         onFocus={(e=>{e.target.className=\"form-input\"\n         e.target.value=\"\"\n         e.target.type=\"password\"})}\n         /> */}\n         <button className='form-button' onClick={handleLogin}>Login</button>\n    </div>\n    </>\n  )\n}\n\nexport default Stafflogin"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}